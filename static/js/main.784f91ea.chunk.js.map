{"version":3,"sources":["Fire.js","logo.png","Components/Navigation/NavSection/NavSection.js","Components/Navigation/NavBar/NavBar.js","Components/TaskArea/QnA/QnA.js","Components/TaskArea/writtenPage/writtenPage.js","Components/TaskArea/TaskRenderer/TaskRenderer.js","Components/Bread/Breadcrumbs/Breadcrumbs.js","Components/SignIn/SignIn.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["firebase","require","firebaseui","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","update","id","updates","database","ref","initUser","uid","console","log","set","sections","open","done","readProgress","a","once","snapshot","val","ui","auth","AuthUI","module","exports","NavSection","props","section","this","sectionInfo","order","isCurrentSection","className","React","Component","NavBar","i","updateSection","taskList","length","currentSection","push","key","onClick","handleClick","src","logo","alt","renderNavBar","QnA","onChange","bind","e","input","target","value","changeCurrent","toUpperCase","task","info","answer","onComplete","divClass","question","placeholder","current","WrittenPage","page","h1Class","title","undefined","subtitle","button","para","TaskRenderer","currentTask","tasks","type","renderCurrentTask","Breadcrumbs","taskNum","updateTask","result","renderBreadcrumbs","fire","SignIn","state","shown","componentDidMount","stopShowing","regainProgress","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","isNewUser","additionalUserInfo","user","signInFlow","signInOptions","PhoneAuthProvider","PROVIDER_ID","start","setState","App","furthestOpen","currentSave","setSection","setTask","editCurrent","completeTask","checkSectionCompleteness","saveProgress","changes","save","inspect","depth","currentUser","userId","saveObj","secSaveObj","j","sectionNum","saveArr","secNum","forEach","t","checkAllComplete","newCurrent","newSec","ending","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","orderByKey","limitToLast"],"mappings":"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","file":"static/js/main.784f91ea.chunk.js","sourcesContent":["let firebase = require('firebase')\nlet firebaseui = require('firebaseui')\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBsSNPOf7cXexx51xoJwlIL69jjKoOAhuQ',\n  authDomain: 'raidercratedshapp2.firebaseapp.com',\n  databaseURL: 'https://raidercratedshapp2.firebaseio.com',\n  projectId: 'raidercratedshapp2',\n  storageBucket: 'raidercratedshapp2.appspot.com',\n  messagingSenderId: '324830394798',\n  appId: '1:324830394798:web:40b55be6f8f788955ab03f'\n}\n\nexport let app = firebase.initializeApp(firebaseConfig)\n\nexport function update(id, updates) {\n  app\n    .database()\n    .ref(id)\n    .update(updates)\n}\n\nexport function initUser(uid) {\n  console.log('initUser')\n  app\n    .database()\n    .ref(uid)\n    .set({\n      sections: [\n        [\n          {open: true, done: false},\n          {open: true, done: false}\n        ],\n        [\n          {open: false, done: false},\n          {open: true, done: false},\n          {open: false, done: false}\n        ],\n        [\n          {open: false, done: false},\n          {open: true, done: false},\n          {open: false, done: false},\n          {open: false, done: false},\n          {open: false, done: false}\n        ],\n        [\n          {open: false, done: false},\n          {open: true, done: false},\n          {open: false, done: false},\n          {open: false, done: false}\n        ],\n        [\n          {open: false, done: false},\n          {open: true, done: false},\n          {open: false, done: false}\n        ],\n        [\n          {open: false, done: false},\n          {open: true, done: false}\n        ]\n      ]\n    })\n}\n\nexport async function readProgress(uid) {\n  let snapshot = await firebase\n    .database()\n    .ref('/' + uid)\n    .once('value')\n  return snapshot.val()\n}\n\nexport let ui = new firebaseui.auth.AuthUI(firebase.auth())\n","module.exports = __webpack_public_path__ + \"static/media/logo.44ea7f76.png\";","import React from 'react'\nimport './NavSection.css'\n\nclass NavSection extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    let state = ''\n    let section = this.props.sectionInfo\n\n    if (section.done) {\n      state += ' completeTask'\n    }\n\n    if (typeof section.order === 'string') state += ' string'\n\n    if (this.props.isCurrentSection) state += ' current'\n\n    return <p className=\"sectionNum\">{section.order}</p>\n  }\n}\n\nexport default NavSection\n","import React from 'react'\nimport './NavBar.css'\nimport NavSection from '../NavSection/NavSection'\nimport logo from '../../../logo.png'\n\nclass NavBar extends React.Component {\n  handleClick(i) {\n    console.log(i)\n    if (this.props.sections[i].open) {\n      this.props.updateSection(i)\n    }\n  }\n\n  renderNavBar() {\n    let sections = this.props.sections\n    let taskList = []\n    for (let i = 0; i < sections.length; i++) {\n      let className = 'navSection'\n\n      if (i === 0) {\n        className += ' intro'\n      } else if (i === 1) {\n        className += ' second'\n      }\n      if (i === sections.length - 2) {\n        className += ' secondToLast'\n      } else if (i === sections.length - 1) {\n        className += ' ending'\n      }\n\n      if (sections[i].done) {\n        className += ' done'\n      } else if (sections[i].open) {\n        className += ' open'\n      } else {\n        className += ' closed'\n      }\n\n      if (sections[sections.length - 1].open) {\n        className += ' allDone'\n      }\n\n      if (i === this.props.currentSection) {\n        className += ' current'\n      }\n\n      taskList.push(\n        <li className={className} key={i} onClick={() => this.handleClick(i)}>\n          <NavSection\n            sectionInfo={sections[i]}\n            updateSection={() => this.props.updateSection(i)}\n            isCurrentSection={i === this.props.currentSection}\n          />\n        </li>\n      )\n    }\n\n    // let ending = this.props.ending\n    //\n    // taskList.push(\n    //   <NavSection\n    //     key={'ending'}\n    //     sectionInfo={ending}\n    //     updateSection={() => this.props.updateSection(-1)}\n    //     isCurrentSection={-1 === this.props.currentSection}\n    //   />\n    // )\n\n    return taskList\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <img src={logo} alt=\"Raider Crate Logo\" />\n        <nav>\n          <ul>{this.renderNavBar()}</ul>\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default NavBar\n","import React from 'react'\nimport './QnA.css'\n\nclass QnA extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onChange(e) {\n    let input = e.target.value\n    console.log('here')\n    this.props.changeCurrent(input)\n    if (input.toUpperCase() === this.props.task.info.answer.toUpperCase()) {\n      if (!this.props.task.done) {\n        this.props.onComplete()\n      }\n    }\n  }\n\n  render() {\n    let divClass = 'qnadiv'\n    if (this.props.task.done) {\n      divClass += ' completeQnAdiv'\n    }\n    return (\n      <div className={divClass}>\n        <h1>{'Question ' + this.props.task.order}</h1>\n        <p className=\"question\">{this.props.task.info.question}</p>\n        <input\n          placeholder=\"Enter Your Answer Here\"\n          className=\"answer\"\n          onChange={this.onChange}\n          value={this.props.task.current}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QnA\n","import React from 'react'\nimport './WrittenPage.css'\n\nclass WrittenPage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    this.props.onComplete()\n  }\n\n  render() {\n    let info = this.props.page.info\n    let h1Class = info.title === 'Congratulations!' ? 'congrats' : undefined\n    let subtitle = info.subtitle ? <h2 className=\"subtitle\">{info.subtitle}</h2> : undefined\n    let button = info.button ? (\n      <button className=\"button\" onClick={this.handleClick}>\n        {info.button}\n      </button>\n    ) : (\n      undefined\n    )\n    return (\n      <div className=\"page\">\n        <h1 className={h1Class}>{info.title}</h1>\n        {subtitle}\n        <p>{info.para}</p>\n        {button}\n      </div>\n    )\n  }\n}\n\nexport default WrittenPage\n","import React from 'react'\nimport QnA from '../QnA/QnA'\nimport WrittenPage from '../writtenPage/writtenPage'\nimport './TaskRenderer.css'\n\nclass TaskRenderer extends React.Component {\n  renderCurrentTask() {\n    let i = this.props.currentTask\n    let task = this.props.tasks[i]\n    let type = task.type\n    if (type === 'qa') {\n      return (\n        <QnA\n          className=\"QnA\"\n          task={task}\n          onComplete={() => this.props.onComplete(this.props.currentSection, i)}\n          changeCurrent={input => this.props.changeCurrent(this.props.currentSection, i, input)}\n        />\n      )\n    } else if (type === 'p') {\n      return (\n        <WrittenPage\n          className=\"written\"\n          page={task}\n          onComplete={() => {\n            this.props.onComplete(this.props.currentSection, i)\n          }}\n        />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"TaskDiv\">\n        <div className=\"colorSaver\"></div>\n        {this.renderCurrentTask()}\n      </div>\n    )\n  }\n}\n\nexport default TaskRenderer\n","import React from 'react'\nimport './Breadcrumbs.css'\n\nclass Breadcrumbs extends React.Component {\n  handleClick(taskNum, open) {\n    if (open) this.props.updateTask(taskNum)\n  }\n\n  renderBreadcrumbs() {\n    let section = this.props.section\n    let tasks = section.tasks\n    let result = []\n    for (let i = 0; i < tasks.length; i++) {\n      let className = 'bc'\n      if (i === this.props.currentTask) {\n        className += ' current'\n      }\n      if (tasks[i].open) {\n        className += ' open'\n      } else {\n        className += ' closed'\n      }\n      result.push(\n        <li key={i} className={className} onClick={() => this.handleClick(i, tasks[i].open)}>\n          {tasks[i].order}\n        </li>\n      )\n    }\n\n    return result\n  }\n\n  render() {\n    return <ul className=\"breadcrumbs\">{this.renderBreadcrumbs()}</ul>\n  }\n}\n\nexport default Breadcrumbs\n","import React from 'react'\nimport './SignIn.css'\nlet fire = require('../../Fire.js')\nlet firebase = require('firebase')\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      shown: true\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this)\n    this.stopShowing = this.stopShowing.bind(this)\n  }\n\n  componentDidMount() {\n    let regainProgress = this.props.regainProgress\n    let initUser = this.props.initUser\n    let stopShowing = this.stopShowing\n    var uiConfig = {\n      callbacks: {\n        signInSuccessWithAuthResult: function(authResult, redirectUrl) {\n          let isNewUser = authResult.additionalUserInfo.isNewUser\n          let uid = authResult.user.uid\n          if (!isNewUser) {\n            regainProgress(uid)\n          } else {\n            initUser(uid)\n          }\n          stopShowing()\n          return false\n        }\n      },\n      // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.PhoneAuthProvider.PROVIDER_ID]\n    }\n\n    fire.ui.start('#firebaseui-auth-container', uiConfig)\n  }\n\n  stopShowing() {\n    this.setState({shown: false})\n  }\n\n  render() {\n    let className = ''\n    if (!this.state.shown) {\n      className += ' hide'\n    }\n    return (\n      <div className={'surrounding' + className}>\n        <div className={'signIn' + className}>\n          <p className={'signInP' + className}>Sign in to regain progress or save your progress from the start</p>\n          <div id=\"firebaseui-auth-container\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SignIn\n","import React from 'react'\nimport NavBar from '../Navigation/NavBar/NavBar.js'\nimport TaskRenderer from '../TaskArea/TaskRenderer/TaskRenderer'\nimport Breadcrumbs from '../Bread/Breadcrumbs/Breadcrumbs'\nimport SignIn from '../SignIn/SignIn'\nimport './App.css'\nlet fire = require('../../Fire.js')\nlet firebase = require('firebase')\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      sections: [\n        {\n          order: 'INTRO',\n          open: true,\n          done: false,\n          furthestOpen: 0,\n          tasks: [\n            {\n              order: 'INSTRUCTIONS',\n              type: 'p',\n              info: {\n                title: 'INSTRUCTIONS',\n                subtitle: 'Read Carefully!',\n                para:\n                  'Each of the four (which could be more or less easily) sections can be done independently, although within the sections there is an order. instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions',\n                button: \"I'm Ready!\"\n              },\n              open: true,\n              done: false\n            }\n          ]\n        },\n        {\n          order: 1,\n          open: false,\n          done: false,\n          furthestOpen: 0,\n          tasks: [\n            {\n              order: 1,\n              type: 'p',\n              info: {\n                title: 'Instructions for Section 1',\n                subtitle: 'Read Carefully!',\n                para:\n                  'This could be full of riddles that are done at home. instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions',\n                button: \"Let's Go!\"\n              },\n              open: true,\n              done: false\n            },\n            {\n              order: 2,\n              type: 'qa',\n              info: {\n                question: 'Testing testing testing testing testing testing testing testing testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            }\n          ]\n        },\n        {\n          order: 2,\n          open: false,\n          done: false,\n          furthestOpen: 0,\n          tasks: [\n            {\n              order: 1,\n              type: 'p',\n              info: {\n                title: 'Instructions for Section 2',\n                subtitle: 'Read Carefully!',\n                para:\n                  'This section will take place at Fun Fore All and then at Dairy Queen across the street.  Drive Safe!',\n                button: \"I'm Ready!\"\n              },\n              open: true,\n              done: false\n            },\n            {\n              order: 2,\n              type: 'qa',\n              info: {\n                question:\n                  'What are the two colors of bumper car #10 at Fun Fore All? (Write them in alphabetical order, for example \"pink, red\"',\n                answer: 'GREEN YELLOW'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 3,\n              type: 'qa',\n              info: {\n                question: 'What game is to the left of the 2018 NBA champions?',\n                answer: 'The Giant'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 4,\n              type: 'qa',\n              info: {\n                question: 'Which car is sponsored by Zoom Internet? (Answer with just the car number)',\n                answer: '3'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 5,\n              type: 'qa',\n              info: {\n                question: 'Which golf hole goes under the waterfall? (Answer with just the hole number)',\n                answer: '16'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 6,\n              type: 'qa',\n              info: {\n                question: 'What color is the general store? (Answer with just the color)',\n                answer: 'yellow'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 7,\n              type: 'qa',\n              info: {\n                question: 'Now at the Dairy Queen across the street - what is the food advertised in art?',\n                answer: 'Burgers'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 8,\n              type: 'qa',\n              info: {\n                question:\n                  'There is a Dairy Queen sign with no D or Q… What (complete) letters are visible?  Put them in alphabetical order!',\n                answer: 'eeinry'\n              },\n              current: '',\n              open: false,\n              done: false\n            }\n          ]\n        },\n        {\n          order: 3,\n          open: false,\n          done: false,\n          furthestOpen: 0,\n          tasks: [\n            {\n              order: 1,\n              type: 'p',\n              info: {\n                title: 'Instructions for Section 3',\n                subtitle: 'Read Carefully!',\n                para:\n                  'This could mirror section 2, but in a different area. instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions',\n                button: \"I'm Ready!\"\n              },\n              open: true,\n              done: false\n            },\n            {\n              order: 2,\n              type: 'qa',\n              info: {\n                question: 'Testing testing testing testing testing testing testing testing testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 3,\n              type: 'qa',\n              info: {\n                question: 'Testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            }\n          ]\n        },\n        {\n          order: 4,\n          open: false,\n          done: false,\n          furthestOpen: 0,\n          tasks: [\n            {\n              order: 1,\n              type: 'p',\n              info: {\n                title: 'Instructions for Section 4',\n                subtitle: 'Read Carefully!',\n                para:\n                  'This could mirror section 2, but in a different area. Remember this whole time they can be taking photos for instagram.  instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions',\n                button: \"I'm Ready!\"\n              },\n              open: true,\n              done: false\n            },\n            {\n              order: 2,\n              type: 'qa',\n              info: {\n                question: 'Testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            }\n          ]\n        },\n        {\n          order: 'END',\n          open: false,\n          done: false,\n          furthestOpen: 0,\n          tasks: [\n            {\n              order: 'END',\n              type: 'p',\n              info: {\n                title: 'Congratulations!',\n                subtitle: 'You finished the hunt!',\n                para:\n                  'Now the players can submit photos of their instagram story to a google form to be entered for a prize, whatever that may be. instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions'\n              },\n              open: true,\n              done: false\n            }\n          ]\n        }\n      ],\n      currentSection: 0,\n      currentTask: 0,\n      currentSave: {\n        sections: [\n          [\n            {open: true, done: false},\n            {open: true, done: false}\n          ],\n          [\n            {open: false, done: false},\n            {open: true, done: false},\n            {open: false, done: false}\n          ],\n          [\n            {open: false, done: false},\n            {open: true, done: false},\n            {open: false, done: false},\n            {open: false, done: false},\n            {open: false, done: false}\n          ],\n          [\n            {open: false, done: false},\n            {open: true, done: false},\n            {open: false, done: false},\n            {open: false, done: false}\n          ],\n          [\n            {open: false, done: false},\n            {open: true, done: false},\n            {open: false, done: false}\n          ],\n          [\n            {open: false, done: false},\n            {open: true, done: false}\n          ]\n        ]\n      }\n    }\n\n    this.setSection = this.setSection.bind(this)\n    this.setTask = this.setTask.bind(this)\n    this.editCurrent = this.editCurrent.bind(this)\n    this.completeTask = this.completeTask.bind(this)\n    this.checkSectionCompleteness = this.checkSectionCompleteness.bind(this)\n    this.saveProgress = this.saveProgress.bind(this)\n    this.regainProgress = this.regainProgress.bind(this)\n  }\n\n  saveProgress(changes) {\n    let sections = this.state.sections\n    let save = this.state.currentSave\n\n    let updates = {}\n\n    for (let i = 0; i < changes.length; i++) {\n      console.log('COMPLETE: ', require('util').inspect(changes[i], {depth: null}))\n      let currentSave = save.sections[changes[i][0]][changes[i][1] + 1]\n      let current\n      if (changes[i][1] === -1) {\n        current = sections[changes[i][0]]\n      } else {\n        current = sections[changes[i][0]].tasks[changes[i][1]]\n      }\n\n      currentSave.open = current.open\n      currentSave.done = current.done\n      if (current.current) currentSave.current = current.current\n\n      updates['/sections/' + changes[i][0] + '/' + (changes[i][1] + 1) + '/'] = currentSave\n\n      save.sections[changes[i][0]][changes[i][1] + 1] = currentSave\n    }\n\n    this.setState({currentSave: save})\n\n    console.log(require('util').inspect(save, {depth: null}))\n\n    let uid = firebase.auth().currentUser.uid\n\n    console.log(uid)\n\n    fire.update(uid, updates)\n  }\n\n  async regainProgress(userId) {\n    let saveObj = await fire.readProgress(userId)\n    console.log(require('util').inspect(saveObj, {depth: null}))\n    let sections = this.state.sections\n    for (let i = 0; i < sections.length; i++) {\n      let secSaveObj = saveObj.sections[i]\n      sections[i].open = secSaveObj[0].open\n      sections[i].done = secSaveObj[0].done\n      let tasks = sections[i].tasks\n      for (let j = 1; j <= tasks.length; j++) {\n        tasks[j - 1].open = secSaveObj[j].open\n        tasks[j - 1].done = secSaveObj[j].done\n        if (secSaveObj[j].current) tasks[j - 1].current = secSaveObj[j].current\n      }\n      sections[i].tasks = tasks\n    }\n\n    this.setState({sections: sections})\n  }\n\n  completeTask(sectionNum, taskNum) {\n    let sections = this.state.sections\n    let tasks = sections[sectionNum].tasks\n    let saveArr = [[sectionNum, taskNum]]\n    tasks[taskNum].done = true\n    if (tasks.length !== taskNum + 1) {\n      tasks[taskNum + 1].open = true\n      sections[sectionNum].furthestOpen = taskNum + 1\n      console.log('saving' + sectionNum, ' ', taskNum + 1)\n      saveArr.push([sectionNum, taskNum + 1])\n    }\n    sections[sectionNum].tasks = tasks\n    this.setState({sections: sections}, this.checkSectionCompleteness(sectionNum))\n    this.saveProgress(saveArr)\n  }\n\n  checkSectionCompleteness(secNum) {\n    let sections = this.state.sections\n    let section = sections[secNum]\n    let done = true\n    section.tasks.forEach(t => {\n      if (!t.done) done = false\n    })\n    if (done) {\n      section.done = true\n      sections[secNum] = section\n      this.saveProgress([[secNum, -1]])\n      if (secNum === 0) {\n        for (let i = 1; i < sections.length - 1; i++) {\n          console.log(sections.length + ' ' + i)\n          console.log(require('util').inspect(sections[i], {depth: null}))\n          sections[i].open = true\n          this.saveProgress([[i, -1]])\n        }\n      }\n      this.setState({sections: sections})\n      this.checkAllComplete()\n    }\n  }\n\n  checkAllComplete() {\n    let sections = this.state.sections\n    for (let i = 0; i < sections.length - 1; i++) {\n      if (!sections[i].done) return\n    }\n    sections[sections.length - 1].open = true\n    this.setState({sections: sections})\n  }\n\n  editCurrent(sectionNum, taskNum, newCurrent) {\n    let sections = this.state.sections\n    let tasks = sections[sectionNum].tasks\n    tasks[taskNum].current = newCurrent\n    sections[sectionNum].tasks = tasks\n    this.setState({sections: sections})\n  }\n\n  setSection(sectionNum) {\n    let newSec = this.state.sections[sectionNum] ? this.state.sections[sectionNum] : this.state.ending\n    let currentTask = newSec.furthestOpen ? newSec.furthestOpen : 0\n    if (newSec.open) this.setState({currentSection: sectionNum, currentTask: currentTask})\n  }\n\n  setTask(taskNum) {\n    this.setState({currentTask: taskNum})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SignIn regainProgress={this.regainProgress} initUser={fire.initUser} />\n        <NavBar\n          sections={this.state.sections}\n          currentSection={this.state.currentSection}\n          updateSection={this.setSection}\n        />\n        <div className=\"notNav\">\n          <Breadcrumbs\n            currentTask={this.state.currentTask}\n            section={this.state.sections[this.state.currentSection]}\n            updateTask={this.setTask}\n          />\n        </div>\n        <TaskRenderer\n          currentSection={this.state.currentSection}\n          currentTask={this.state.currentTask}\n          tasks={this.state.sections[this.state.currentSection].tasks}\n          onComplete={this.completeTask}\n          changeCurrent={this.editCurrent}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './Components/App/App'\nimport * as serviceWorker from './serviceWorker'\n\nlet fire = require('./Fire')\n\n// import Firebase, {FirebaseContext} from './components/Firebase'\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <FirebaseContext.Provider value={new Firebase()}>*/}\n    <App />\n    {/* </FirebaseContext.Provider>*/},\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n// import 'firebase/auth'\n\nlet messageRef = fire.app\n  .database()\n  .ref('newMessages')\n  .orderByKey()\n  .limitToLast(100)\n"],"sourceRoot":""}