{"version":3,"sources":["logo.png","Components/TaskOption/TaskOption.js","Components/TaskList/TaskList.js","Components/QnA/QnA.js","Components/writtenPage/writtenPage.js","Components/TaskRenderer/TaskRenderer.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","TaskOption","props","handleClick","bind","this","task","open","newTask","order","state","done","current","className","onClick","React","Component","TaskList","tasks","taskList","i","push","key","currentTask","length","src","logo","alt","renderTaskList","QnA","onChange","e","input","target","value","console","log","changeCurrent","toUpperCase","info","answer","onComplete","divClass","question","placeholder","WrittenPage","page","h1Class","title","undefined","subtitle","button","para","TaskRenderer","type","renderCurrentTask","App","taskNum","changeTask","editCurrent","completeTask","setState","newCurrent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0f1ca3f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.44ea7f76.png\";","import React from 'react'\nimport './TaskOption.css'\n\nclass TaskOption extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    if (this.props.task.open) {\n      this.props.newTask(this.props.order)\n    }\n  }\n\n  render() {\n    let state = ''\n    let task = this.props.task\n\n    if (task.open) {\n      state += 'openTask'\n      if (task.done) {\n        state += ' completeTask'\n      }\n    } else {\n      state += 'closedTask'\n    }\n\n    if (typeof this.props.task.order === 'string') state += ' string'\n\n    if (this.props.current) state += ' current'\n    return (\n      <button className={'task ' + state} onClick={this.handleClick}>\n        <li className=\"taskNum\">{this.props.task.order}</li>\n      </button>\n    )\n  }\n}\n\nexport default TaskOption\n","import React from 'react'\nimport './TaskList.css'\nimport TaskOption from '../TaskOption/TaskOption'\nimport logo from '../../logo.png'\n\nclass TaskList extends React.Component {\n  renderTaskList() {\n    let tasks = this.props.tasks\n    let taskList = []\n    for (let i = 0; i < tasks.length; i++) {\n      taskList.push(\n        <TaskOption\n          key={i}\n          task={tasks[i]}\n          newTask={() => this.props.newTask(i)}\n          current={i === this.props.currentTask}\n        />\n      )\n    }\n\n    return taskList\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <img src={logo} alt=\"Raider Crate Logo\" />\n        <nav>\n          <ul>{this.renderTaskList()}</ul>\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default TaskList\n","import React from 'react'\nimport './QnA.css'\n\nclass QnA extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onChange(e) {\n    let input = e.target.value\n    console.log('here')\n    this.props.changeCurrent(input)\n    if (input.toUpperCase() === this.props.task.info.answer.toUpperCase()) {\n      if (!this.props.task.done) {\n        this.props.onComplete()\n      }\n    }\n  }\n\n  render() {\n    let divClass = 'qnadiv'\n    if (this.props.task.done) {\n      console.log('should be green')\n      divClass += ' completeQnAdiv'\n    }\n    return (\n      <div className={divClass}>\n        <h1>{'Question ' + this.props.task.order}</h1>\n        <p className=\"question\">{this.props.task.info.question}</p>\n        <input\n          placeholder=\"Enter Your Answer Here\"\n          className=\"answer\"\n          onChange={this.onChange}\n          value={this.props.task.current}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QnA\n","import React from 'react'\nimport './WrittenPage.css'\n\nclass WrittenPage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    this.props.onComplete()\n  }\n\n  render() {\n    let info = this.props.page.info\n    let h1Class = info.title === 'Congratulations!' ? 'congrats' : undefined\n    console.log(h1Class)\n    let subtitle = info.subtitle ? <h2 className=\"subtitle\">{info.subtitle}</h2> : undefined\n    let button = info.button ? (\n      <button className=\"button\" onClick={this.handleClick}>\n        {info.button}\n      </button>\n    ) : (\n      undefined\n    )\n    return (\n      <div className=\"page\">\n        <h1 className={h1Class}>{info.title}</h1>\n        {subtitle}\n        <p>{info.para}</p>\n        {button}\n      </div>\n    )\n  }\n}\n\nexport default WrittenPage\n","import React from 'react'\nimport QnA from '../QnA/QnA'\nimport WrittenPage from '../writtenPage/writtenPage'\nimport './TaskRenderer.css'\n\nclass TaskRenderer extends React.Component {\n  renderCurrentTask() {\n    let i = this.props.currentTask\n    let task = this.props.tasks[i]\n    let type = task.type\n    if (type === 'qa') {\n      return (\n        <QnA\n          className=\"QnA\"\n          task={task}\n          onComplete={() => this.props.onComplete(i)}\n          changeCurrent={input => this.props.changeCurrent(i, input)}\n        />\n      )\n    } else if (type === 'p') {\n      return (\n        <WrittenPage\n          className=\"written\"\n          page={task}\n          onComplete={() => {\n            console.log('tesijoaijsdf' + i)\n            this.props.onComplete(i)\n          }}\n        />\n      )\n    }\n  }\n\n  render() {\n    return <div className=\"TaskDiv\">{this.renderCurrentTask()}</div>\n  }\n}\n\nexport default TaskRenderer\n","import React from 'react'\nimport TaskList from '../TaskList/TaskList.js'\nimport TaskRenderer from '../TaskRenderer/TaskRenderer'\nimport './App.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      tasks: [\n        {\n          order: 'INTRO',\n          type: 'p',\n          info: {\n            title: 'INSTRUCTIONS',\n            subtitle: 'Read Carefully!',\n            para:\n              'instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions',\n            button: \"I'm Ready!\"\n          },\n          open: true,\n          done: false\n        },\n        {\n          order: 1,\n          type: 'qa',\n          info: {\n            question: 'Testing testing testing testing testing testing testing testing testing',\n            answer: 'TESTING'\n          },\n          current: '',\n          open: false,\n          done: false\n        },\n        {\n          order: 2,\n          type: 'qa',\n          info: {\n            question: 'Testing',\n            answer: 'TESTING'\n          },\n          current: '',\n          open: false,\n          done: false\n        },\n        {\n          order: 3,\n          type: 'qa',\n          info: {\n            question: 'Testing',\n            answer: 'TESTING'\n          },\n          current: '',\n          open: false,\n          done: false\n        },\n        {\n          order: 4,\n          type: 'qa',\n          info: {\n            question: 'Testing',\n            answer: 'TESTING'\n          },\n          current: '',\n          open: false,\n          done: false\n        },\n        {\n          order: 'END',\n          type: 'p',\n          info: {\n            title: 'Congratulations!',\n            subtitle: 'You finished the hunt!',\n            para:\n              'instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions'\n          },\n          open: false\n        }\n      ],\n      taskNum: 0\n    }\n\n    this.changeTask = this.changeTask.bind(this)\n    this.editCurrent = this.editCurrent.bind(this)\n    this.completeTask = this.completeTask.bind(this)\n  }\n\n  completeTask(taskNum) {\n    let tasks = this.state.tasks\n    tasks[taskNum].done = true\n    if (tasks.length !== taskNum + 1) {\n      tasks[taskNum + 1].open = true\n    }\n    this.setState({tasks: tasks})\n  }\n\n  editCurrent(taskNum, newCurrent) {\n    let tasks = this.state.tasks\n    tasks[taskNum].current = newCurrent\n    this.setState({tasks: tasks})\n  }\n\n  changeTask(taskNum) {\n    this.setState({taskNum: taskNum})\n    console.log(this.state.tasks[taskNum])\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TaskList tasks={this.state.tasks} currentTask={this.state.taskNum} newTask={this.changeTask} />\n        <TaskRenderer\n          currentTask={this.state.taskNum}\n          tasks={this.state.tasks}\n          onComplete={this.completeTask}\n          changeCurrent={this.editCurrent}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}