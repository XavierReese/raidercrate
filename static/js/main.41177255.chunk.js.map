{"version":3,"sources":["logo.png","Components/Navigation/NavSection/NavSection.js","Components/Navigation/NavBar/NavBar.js","Components/TaskArea/QnA/QnA.js","Components/TaskArea/writtenPage/writtenPage.js","Components/TaskArea/TaskRenderer/TaskRenderer.js","Components/Bread/Breadcrumbs/Breadcrumbs.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","NavSection","props","section","this","sectionInfo","done","order","isCurrentSection","className","React","Component","NavBar","i","console","log","sections","open","updateSection","taskList","length","push","key","onClick","handleClick","currentSection","src","logo","alt","renderNavBar","QnA","onChange","bind","e","input","target","value","changeCurrent","toUpperCase","task","info","answer","onComplete","divClass","question","placeholder","current","WrittenPage","page","h1Class","title","undefined","subtitle","button","para","TaskRenderer","currentTask","tasks","type","renderCurrentTask","Breadcrumbs","taskNum","updateTask","result","renderBreadcrumbs","App","state","furthestOpen","ending","setSection","setTask","editCurrent","completeTask","checkSectionCompleteness","sectionNum","setState","secNum","forEach","t","checkAllComplete","newCurrent","newSec","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.41177255.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.44ea7f76.png\";","import React from 'react'\nimport './NavSection.css'\n\nclass NavSection extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    let state = ''\n    let section = this.props.sectionInfo\n\n    if (section.done) {\n      state += ' completeTask'\n    }\n\n    if (typeof section.order === 'string') state += ' string'\n\n    if (this.props.isCurrentSection) state += ' current'\n\n    return <p className=\"sectionNum\">{section.order}</p>\n  }\n}\n\nexport default NavSection\n","import React from 'react'\nimport './NavBar.css'\nimport NavSection from '../NavSection/NavSection'\nimport logo from '../../../logo.png'\n\nclass NavBar extends React.Component {\n  handleClick(i) {\n    console.log(i)\n    if (this.props.sections[i].open) {\n      this.props.updateSection(i)\n    }\n  }\n\n  renderNavBar() {\n    let sections = this.props.sections\n    let taskList = []\n    for (let i = 0; i < sections.length; i++) {\n      let className = 'navSection'\n\n      if (i === 0) {\n        className += ' intro'\n      } else if (i === 1) {\n        className += ' second'\n      }\n      if (i === sections.length - 2) {\n        className += ' secondToLast'\n      } else if (i === sections.length - 1) {\n        className += ' ending'\n      }\n\n      if (sections[i].done) {\n        className += ' done'\n      } else if (sections[i].open) {\n        className += ' open'\n      } else {\n        className += ' closed'\n      }\n\n      if (sections[sections.length - 1].open) {\n        className += ' allDone'\n      }\n\n      taskList.push(\n        <li className={className} key={i} onClick={() => this.handleClick(i)}>\n          <NavSection\n            sectionInfo={sections[i]}\n            updateSection={() => this.props.updateSection(i)}\n            isCurrentSection={i === this.props.currentSection}\n          />\n        </li>\n      )\n    }\n\n    // let ending = this.props.ending\n    //\n    // taskList.push(\n    //   <NavSection\n    //     key={'ending'}\n    //     sectionInfo={ending}\n    //     updateSection={() => this.props.updateSection(-1)}\n    //     isCurrentSection={-1 === this.props.currentSection}\n    //   />\n    // )\n\n    return taskList\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <img src={logo} alt=\"Raider Crate Logo\" />\n        <nav>\n          <ul>{this.renderNavBar()}</ul>\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default NavBar\n","import React from 'react'\nimport './QnA.css'\n\nclass QnA extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onChange(e) {\n    let input = e.target.value\n    console.log('here')\n    this.props.changeCurrent(input)\n    if (input.toUpperCase() === this.props.task.info.answer.toUpperCase()) {\n      if (!this.props.task.done) {\n        this.props.onComplete()\n      }\n    }\n  }\n\n  render() {\n    let divClass = 'qnadiv'\n    if (this.props.task.done) {\n      console.log('should be green')\n      divClass += ' completeQnAdiv'\n    }\n    return (\n      <div className={divClass}>\n        <h1>{'Question ' + this.props.task.order}</h1>\n        <p className=\"question\">{this.props.task.info.question}</p>\n        <input\n          placeholder=\"Enter Your Answer Here\"\n          className=\"answer\"\n          onChange={this.onChange}\n          value={this.props.task.current}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QnA\n","import React from 'react'\nimport './WrittenPage.css'\n\nclass WrittenPage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    this.props.onComplete()\n  }\n\n  render() {\n    let info = this.props.page.info\n    let h1Class = info.title === 'Congratulations!' ? 'congrats' : undefined\n    console.log(h1Class)\n    let subtitle = info.subtitle ? <h2 className=\"subtitle\">{info.subtitle}</h2> : undefined\n    let button = info.button ? (\n      <button className=\"button\" onClick={this.handleClick}>\n        {info.button}\n      </button>\n    ) : (\n      undefined\n    )\n    return (\n      <div className=\"page\">\n        <h1 className={h1Class}>{info.title}</h1>\n        {subtitle}\n        <p>{info.para}</p>\n        {button}\n      </div>\n    )\n  }\n}\n\nexport default WrittenPage\n","import React from 'react'\nimport QnA from '../QnA/QnA'\nimport WrittenPage from '../writtenPage/writtenPage'\nimport './TaskRenderer.css'\n\nclass TaskRenderer extends React.Component {\n  renderCurrentTask() {\n    let i = this.props.currentTask\n    let task = this.props.tasks[i]\n    let type = task.type\n    if (type === 'qa') {\n      return (\n        <QnA\n          className=\"QnA\"\n          task={task}\n          onComplete={() => this.props.onComplete(this.props.currentSection, i)}\n          changeCurrent={input => this.props.changeCurrent(this.props.currentSection, i, input)}\n        />\n      )\n    } else if (type === 'p') {\n      return (\n        <WrittenPage\n          className=\"written\"\n          page={task}\n          onComplete={() => {\n            this.props.onComplete(this.props.currentSection, i)\n          }}\n        />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"TaskDiv\">\n        <div className=\"colorSaver\"></div>\n        {this.renderCurrentTask()}\n      </div>\n    )\n  }\n}\n\nexport default TaskRenderer\n","import React from 'react'\nimport './Breadcrumbs.css'\n\nclass Breadcrumbs extends React.Component {\n  handleClick(taskNum, open) {\n    if (open) this.props.updateTask(taskNum)\n  }\n\n  renderBreadcrumbs() {\n    let section = this.props.section\n    let tasks = section.tasks\n    let result = []\n    for (let i = 0; i < tasks.length; i++) {\n      let className = 'bc'\n      if (i === this.props.currentTask) {\n        className += ' current'\n      }\n      if (tasks[i].open) {\n        className += ' open'\n      } else {\n        className += ' closed'\n      }\n      result.push(\n        <li key={i} className={className} onClick={() => this.handleClick(i, tasks[i].open)}>\n          {tasks[i].order}\n        </li>\n      )\n    }\n\n    return result\n  }\n\n  render() {\n    return <ul className=\"breadcrumbs\">{this.renderBreadcrumbs()}</ul>\n  }\n}\n\nexport default Breadcrumbs\n","import React from 'react'\nimport NavBar from '../Navigation/NavBar/NavBar.js'\nimport TaskRenderer from '../TaskArea/TaskRenderer/TaskRenderer'\nimport Breadcrumbs from '../Bread/Breadcrumbs/Breadcrumbs'\nimport './App.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      sections: [\n        {\n          order: 'INTRO',\n          open: true,\n          done: false,\n          furthestOpen: 0,\n          tasks: [\n            {\n              order: 'INSTRUCTIONS',\n              type: 'p',\n              info: {\n                title: 'INSTRUCTIONS',\n                subtitle: 'Read Carefully!',\n                para:\n                  'Each of the four (which could be more or less easily) sections can be done independently, although within the sections there is an order. instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions',\n                button: \"I'm Ready!\"\n              },\n              open: true,\n              done: false\n            }\n          ]\n        },\n        {\n          order: 1,\n          open: true,\n          done: false,\n          furthestOpen: 0,\n          tasks: [\n            {\n              order: 1,\n              type: 'p',\n              info: {\n                title: 'Instructions for Section One',\n                subtitle: 'Read Carefully!',\n                para:\n                  'This could be full of riddles that are done at home. instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions',\n                button: \"Let's Go!\"\n              },\n              open: true,\n              done: false\n            },\n            {\n              order: 2,\n              type: 'qa',\n              info: {\n                question: 'Testing testing testing testing testing testing testing testing testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 3,\n              type: 'qa',\n              info: {\n                question: 'Testing testing testing testing testing testing testing testing testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 4,\n              type: 'qa',\n              info: {\n                question: 'Testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 5,\n              type: 'qa',\n              info: {\n                question: 'Testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            }\n          ]\n        },\n        {\n          order: 2,\n          open: true,\n          done: false,\n          furthestOpen: 0,\n          tasks: [\n            {\n              order: 1,\n              type: 'p',\n              info: {\n                title: 'Instructions for Section 2',\n                subtitle: 'Read Carefully!',\n                para:\n                  'This could lead players from business to business in a walkable distance, with clues from structures, history facts, and hidden gems along the way. instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions',\n                button: \"I'm Ready!\"\n              },\n              open: true,\n              done: false\n            },\n            {\n              order: 2,\n              type: 'qa',\n              info: {\n                question: 'Testing testing testing testing testing testing testing testing testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 3,\n              type: 'qa',\n              info: {\n                question: 'Testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 4,\n              type: 'qa',\n              info: {\n                question: 'Testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 5,\n              type: 'qa',\n              info: {\n                question: 'Testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            }\n          ]\n        },\n        {\n          order: 3,\n          open: true,\n          done: false,\n          furthestOpen: 0,\n          tasks: [\n            {\n              order: 1,\n              type: 'p',\n              info: {\n                title: 'Instructions for Section 3',\n                subtitle: 'Read Carefully!',\n                para:\n                  'This could mirror section 2, but in a different area. instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions',\n                button: \"I'm Ready!\"\n              },\n              open: true,\n              done: false\n            },\n            {\n              order: 2,\n              type: 'qa',\n              info: {\n                question: 'Testing testing testing testing testing testing testing testing testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 3,\n              type: 'qa',\n              info: {\n                question: 'Testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 4,\n              type: 'qa',\n              info: {\n                question: 'Testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            },\n            {\n              order: 5,\n              type: 'qa',\n              info: {\n                question: 'Testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            }\n          ]\n        },\n        {\n          order: 4,\n          open: true,\n          done: false,\n          furthestOpen: 0,\n          tasks: [\n            {\n              order: 1,\n              type: 'p',\n              info: {\n                title: 'Instructions for Section 4',\n                subtitle: 'Read Carefully!',\n                para:\n                  'This could mirror section 2, but in a different area. Remember this whole time they can be taking photos for instagram.  instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions',\n                button: \"I'm Ready!\"\n              },\n              open: true,\n              done: false\n            },\n            {\n              order: 2,\n              type: 'qa',\n              info: {\n                question: 'Testing',\n                answer: 'TESTING'\n              },\n              current: '',\n              open: false,\n              done: false\n            }\n          ]\n        },\n        {\n          order: 'END',\n          open: false,\n          done: false,\n          furthestOpen: 0,\n          tasks: [\n            {\n              order: 'END',\n              type: 'p',\n              info: {\n                title: 'Congratulations!',\n                subtitle: 'You finished the hunt!',\n                para:\n                  'Now the players can submit photos of their instagram story to a google form to be entered for a prize, whatever that may be. instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions'\n              },\n              open: true\n            }\n          ]\n        }\n      ],\n      currentSection: 0,\n      currentTask: 0,\n      ending: {\n        order: 'END',\n        type: 'p',\n        info: {\n          title: 'Congratulations!',\n          subtitle: 'You finished the hunt!',\n          para:\n            'instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions instructions'\n        },\n        open: false\n      }\n    }\n\n    this.setSection = this.setSection.bind(this)\n    this.setTask = this.setTask.bind(this)\n    this.editCurrent = this.editCurrent.bind(this)\n    this.completeTask = this.completeTask.bind(this)\n    this.checkSectionCompleteness = this.checkSectionCompleteness.bind(this)\n  }\n\n  completeTask(sectionNum, taskNum) {\n    let sections = this.state.sections\n    let tasks = sections[sectionNum].tasks\n    tasks[taskNum].done = true\n    if (tasks.length !== taskNum + 1) {\n      tasks[taskNum + 1].open = true\n      sections[sectionNum].furthestOpen = taskNum + 1\n    }\n    sections[sectionNum].tasks = tasks\n    this.setState({sections: sections}, this.checkSectionCompleteness(sectionNum))\n  }\n\n  checkSectionCompleteness(secNum) {\n    let sections = this.state.sections\n    let section = sections[secNum]\n    let done = true\n    section.tasks.forEach(t => {\n      if (!t.done) done = false\n    })\n    if (done) {\n      section.done = true\n      sections[secNum] = section\n      console.log('DONE! ' + secNum)\n      this.setState({sections: section})\n      this.checkAllComplete()\n    }\n  }\n\n  checkAllComplete() {\n    let sections = this.state.sections\n    for (let i = 0; i < sections.length - 1; i++) {\n      if (!sections[i].done) return\n    }\n    sections[sections.length - 1].open = true\n    this.setState({sections: sections})\n  }\n\n  editCurrent(sectionNum, taskNum, newCurrent) {\n    let sections = this.state.sections\n    let tasks = sections[sectionNum].tasks\n    tasks[taskNum].current = newCurrent\n    sections[sectionNum].tasks = tasks\n    this.setState({sections: sections})\n  }\n\n  setSection(sectionNum) {\n    let newSec = this.state.sections[sectionNum] ? this.state.sections[sectionNum] : this.state.ending\n    let currentTask = newSec.furthestOpen ? newSec.furthestOpen : 0\n    if (newSec.open) this.setState({currentSection: sectionNum, currentTask: currentTask})\n  }\n\n  setTask(taskNum) {\n    this.setState({currentTask: taskNum})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar\n          sections={this.state.sections}\n          currentSection={this.state.currentSection}\n          updateSection={this.setSection}\n        />\n        <div className=\"notNav\">\n          <Breadcrumbs\n            currentTask={this.state.currentTask}\n            section={this.state.sections[this.state.currentSection]}\n            updateTask={this.setTask}\n          />\n        </div>\n        <TaskRenderer\n          currentSection={this.state.currentSection}\n          currentTask={this.state.currentTask}\n          tasks={this.state.sections[this.state.currentSection].tasks}\n          onComplete={this.completeTask}\n          changeCurrent={this.editCurrent}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}